!function(){return function t(o,e,s){function n(i,c){if(!e[i]){if(!o[i]){var a="function"==typeof require&&require;if(!c&&a)return a(i,!0);if(r)return r(i,!0);var u=new Error("Cannot find module '"+i+"'");throw u.code="MODULE_NOT_FOUND",u}var l=e[i]={exports:{}};o[i][0].call(l.exports,function(t){return n(o[i][1][t]||t)},l,l.exports,t,o,e,s)}return e[i].exports}for(var r="function"==typeof require&&require,i=0;i<s.length;i++)n(s[i]);return n}}()({1:[function(t,o,e){const s=t("./lib/subprotocol/jsonRWS"),n=t("./lib/helper");window.wsu={ClientBrowser:class{constructor(t){this.wcOpts=t,this.ws}connect(){const t=this.wcOpts.wsURL;this.ws=new WebSocket(t,["jsonRWS"]),this.onEvents(),this.onMessage(t=>{"info/socket/id"===t.cmd&&(this.socketID=+t.payload)})}disconnect(){this.ws.close()}onEvents(){this.ws.onopen=(t=>{console.log("WS Connection opened")}),this.ws.onclose=(()=>{console.log("WS Connection closed")}),this.ws.onerror=(t=>{console.error(t)})}onMessage(t){this.ws.onmessage=(o=>{const e=o.data;this.debug("Received: ",e);const n=s.incoming(e);t(n)})}question(t){const o=this.socketID;return this.carryOut(t,void 0,o),new Promise(async(o,e)=>{this.onMessage(async e=>{e.cmd===t&&o(e)}),await n.sleep(this.wcOpts.timeout),e(new Error(`No answer for the question: ${t}`))})}async infoSocketId(){const t=await this.question("info/socket/id");return this.socketID=+t.payload,this.socketID}async infoSocketList(){return(await this.question("info/socket/list")).payload}async infoRoomList(){return(await this.question("info/room/list")).payload}async infoRoomListmy(){return(await this.question("info/room/listmy")).payload}carryOut(t,o,e){e||(e=0);const r={id:n.generateID(),from:+this.socketID,to:e,cmd:t,payload:o},i=s.outgoing(r);if(!i||!this.ws||1!==this.ws.readyState)throw new Error("The message is not defined or the client is disconnected.");this.ws.send(i)}sendOne(t,o){const e=o;this.carryOut("socket/sendone",e,t)}send(t,o){const e=o;this.carryOut("socket/send",e,t)}broadcast(t){const o=t;this.carryOut("socket/broadcast",o)}sendAll(t){const o=t;this.carryOut("socket/sendall",o)}roomEnter(t){const o=t;this.carryOut("room/enter",o,0)}roomExit(t){const o=t;this.carryOut("room/exit",o,0)}roomExitAll(){this.carryOut("room/exitall",void 0,0)}roomSend(t,o){const e=o,s=t;this.carryOut("room/send",e,s)}setNick(t){const o=t;this.carryOut("socket/nick",o,0)}route(t,o){const e={uri:t,body:o};this.carryOut("route",e,0)}debug(...t){const o=t.join("");this.wcOpts.debug&&console.log(o)}}}},{"./lib/helper":2,"./lib/subprotocol/jsonRWS":3}],2:[function(t,o,e){const s=new class{getMessageSize(t){return+new Blob([t]).size}async sleep(t){await new Promise(o=>setTimeout(o,t))}generateID(){const t=1e3*Math.random(),o=Math.floor(t);return+((new Date).toISOString().replace(/^20/,"").replace(/\-/g,"").replace(/\:/g,"").replace("T","").replace("Z","").replace(".","")+o)}};o.exports=s},{}],3:[function(t,o,e){o.exports=new class{incoming(t){let o,e=!1;try{o=JSON.parse(t);const s=Object.keys(o);e=this._testFields(s)}catch(t){e=!1}if(e)return o;throw new Error(`Incoming message "${t}" doesn't have valid "jsonRWS" subprotocol format.`)}outgoing(t){const o=Object.keys(t);if(this._testFields(o))return JSON.stringify(t);throw new Error(`Outgoing message ${JSON.stringify(t)} doesn't have valid "jsonRWS" subprotocol format.`)}_testFields(t){const o=["id","from","to","cmd","payload"],e=["id","from","to","cmd"];let s=!0;for(const e of t)if(-1===o.indexOf(e)){s=!1;break}for(const o of e)if(-1===t.indexOf(o)){s=!1;break}return s}}},{}]},{},[1]);
//# sourceMappingURL=client-min.js.map
