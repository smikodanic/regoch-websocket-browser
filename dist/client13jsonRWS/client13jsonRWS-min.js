!function(){return function t(e,o,s){function n(r,c){if(!o[r]){if(!e[r]){var a="function"==typeof require&&require;if(!c&&a)return a(r,!0);if(i)return i(r,!0);var h=new Error("Cannot find module '"+r+"'");throw h.code="MODULE_NOT_FOUND",h}var l=o[r]={exports:{}};e[r][0].call(l.exports,function(t){return n(e[r][1][t]||t)},l,l.exports,t,e,o,s)}return o[r].exports}for(var i="function"==typeof require&&require,r=0;r<s.length;r++)n(s[r]);return n}}()({1:[function(t,e,o){const s=t("./lib/subprotocol/jsonRWS"),n=t("./lib/helper");window.regoch={Client13jsonRWS:class{constructor(t){this.wcOpts=t,this.wsocket,this.socketID,this.attempt=1}connect(){const t=this.wcOpts.wsURL,e=this.wcOpts.subprotocol?["jsonRWS"]:[];this.wsocket=new WebSocket(t,e),this.onEvents()}disconnect(){this.wsocket.close()}async reconnect(){const t=this.wcOpts.recconectAttempts,e=this.wcOpts.recconectDelay;this.attempt<=t&&(await n.sleep(e),this.connect(),console.log(`Reconnect attempt #${this.attempt} of ${t} in ${e}ms`),this.attempt++)}reset(){delete this.clientRequest,this.socket&&this.socket.unref(),delete this.socket}onEvents(){this.wsocket.onopen=(async t=>{this.socketID=await this.infoSocketId(),console.log("WS Connection opened")}),this.wsocket.onclose=(()=>{console.log("WS Connection closed"),this.reset(),this.reconnect()}),this.wsocket.onerror=(t=>{})}onMessage(t){this.wsocket.onmessage=(e=>{const o=e.data;this.debugger("Received: ",o);const n=s.incoming(o);t(n)})}question(t){const e=this.socketID;return this.carryOut(e,t,void 0),new Promise(async(e,o)=>{this.onMessage(async o=>{o.cmd===t&&e(o)}),await n.sleep(this.wcOpts.timeout),o(new Error(`No answer for the question: ${t}`))})}async infoSocketId(){const t=await this.question("info/socket/id");return this.socketID=+t.payload,this.socketID}async infoSocketList(){return(await this.question("info/socket/list")).payload}async infoRoomList(){return(await this.question("info/room/list")).payload}async infoRoomListmy(){return(await this.question("info/room/listmy")).payload}carryOut(t,e,o){t||(t=0);const i={id:n.generateID(),from:+this.socketID,to:t,cmd:e,payload:o},r=s.outgoing(i);if(!r||!this.wsocket||1!==this.wsocket.readyState)throw new Error("The message is not defined or the client is disconnected.");this.wsocket.send(r)}sendOne(t,e){const o=e;this.carryOut(t,"socket/sendone",o)}send(t,e){const o=e;this.carryOut(t,"socket/send",o)}broadcast(t){const e=t;this.carryOut("socket/broadcast",e)}sendAll(t){const e=t;this.carryOut("socket/sendall",e)}roomEnter(t){const e=t;this.carryOut(0,"room/enter",e)}roomExit(t){const e=t;this.carryOut(0,"room/exit",e)}roomExitAll(){this.carryOut(0,"room/exitall",void 0)}roomSend(t,e){const o=t,s=e;this.carryOut(o,"room/send",s)}setNick(t){const e=t;this.carryOut(0,"socket/nick",e)}route(t,e){const o={uri:t,body:e};this.carryOut(0,"route",o)}debugger(...t){const e=t.join("");this.wcOpts.debug&&console.log(e)}}}},{"./lib/helper":2,"./lib/subprotocol/jsonRWS":3}],2:[function(t,e,o){const s=new class{getMessageSize(t){return+new Blob([t]).size}async sleep(t){await new Promise(e=>setTimeout(e,t))}generateID(){const t=1e3*Math.random(),e=Math.floor(t);return+((new Date).toISOString().replace(/^20/,"").replace(/\-/g,"").replace(/\:/g,"").replace("T","").replace("Z","").replace(".","")+e)}};e.exports=s},{}],3:[function(t,e,o){e.exports=new class{incoming(t){let e,o=!1;try{e=JSON.parse(t);const s=Object.keys(e);o=this._testFields(s)}catch(t){o=!1}if(o)return e;throw new Error(`Incoming message "${t}" doesn't have valid "jsonRWS" subprotocol format.`)}outgoing(t){const e=Object.keys(t);if(this._testFields(e))return JSON.stringify(t);throw new Error(`Outgoing message ${JSON.stringify(t)} doesn't have valid "jsonRWS" subprotocol format.`)}_testFields(t){const e=["id","from","to","cmd","payload"],o=["id","from","to","cmd"];let s=!0;for(const o of t)if(-1===e.indexOf(o)){s=!1;break}for(const e of o)if(-1===t.indexOf(e)){s=!1;break}return s}}},{}]},{},[1]);
//# sourceMappingURL=client13jsonRWS-min.js.map
